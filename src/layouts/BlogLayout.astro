---
import type { MarkdownHeading } from "astro";
import BackLink from "components/molecules/BackLink";
import BlogSchema from "components/atoms/BlogSchema.astro";
import MathHeader from "components/atoms/MathHeader.astro";
import BlogFooter from "components/molecules/BlogFooter.astro";
import BlogHeader from "components/molecules/BlogHeader.astro";
import LinkList from "components/molecules/LinkList";
import Article from "components/organisms/Article.astro";
import CommentList from "components/organisms/CommentList";
import TableOfContents from "components/organisms/TableOfContents";
import { BLOG_IMAGE_PLACEHOLDER } from "config";
import type { BlogData } from "interfaces/BlogData";
import BaseLayout from "layouts/BaseLayout.astro";
import { getSlug } from "utils/getSlug";
import { getTranslation } from "utils/getTranslation";
import { getViewTransitionName } from "utils/getViewTransitionName";

type Props = BlogData & {
    headings: MarkdownHeading[];
};

const {
    title,
    description,
    date,
    image = BLOG_IMAGE_PLACEHOLDER,
    links,
    license,
    language,
    lastModified,
    headings,
    math,
    alternates,
} = Astro.props;
---

<BaseLayout {title} {description} {image} {language} languages={alternates}>
    <Fragment slot="head">
        {math && <MathHeader />}

        <BlogSchema
            {title}
            {description}
            {date}
            {lastModified}
            {image}
            {language}
            {license}
        />
    </Fragment>

    <BackLink {language} slot="left-sidebar" className="justify-self-end" />

    <header fixed top-0 z-1 p-lg lg-hidden>
        <BackLink {language} />
    </header>

    <main flex="~ col" gap-y-7>
        <Article transition:name={getViewTransitionName(title)}>
            <BlogHeader
                slot="header"
                {title}
                {date}
                {image}
                {language}
                languages={alternates}
                slug={getSlug(Astro.url.pathname)}
            />
            <slot />
            <BlogFooter slot="footer" {lastModified} licenseText={license} />
        </Article>

        {
            links && (
                <LinkList
                    {links}
                    aria-label={getTranslation(language).externalLinks}
                    className="card"
                />
            )
        }

        <CommentList {language} client:idle />
    </main>

    {
        headings.length > 0 && (
            <TableOfContents {headings} slot="right-sidebar" client:load />
        )
    }
</BaseLayout>
